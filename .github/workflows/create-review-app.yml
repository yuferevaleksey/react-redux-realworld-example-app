---
name: Create review app

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Build
        run: npm run build
        env:
          REACT_APP_BACKEND_URL: http://${{ github.head_ref }}.${{ secrets.API_URL }}
      - name: Archive build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
  deploy:
    if: "!contains(github.event.pull_request.title, 'SKIP REVIEW')"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Setup SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Adding known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Copy build to the server
        run: |
          ssh $SSH_USER@$SSH_HOST "mkdir -p ~/app/${{ github.head_ref }}/public"
          rsync -ravz build/* $SSH_USER@$SSH_HOST:~/app/${{ github.head_ref }}/public/
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
      - name: Post review app URL
        if: success()
        uses: mshick/add-pr-comment@v1
        with:
          message: Created new review app at ${{ env.REVIEW_APP_URL }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          REVIEW_APP_URL: http://${{ github.head_ref }}.${{ secrets.APP_HOST }}/
